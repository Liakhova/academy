package theory.lecture_4.ex_1_objects;

public class A {

    //статическая переменная относится к классу, обращаться к ней нужно используя название класса
    // A.staticInt = 20; но эта переменная объявлена приватной, к ней не будет доступа
    private static int staticInt = 10;
    //ленивая инициализация, т.е. отложенная, будет сделана не на этапе создания класса
    // (или объекта в случае с не статической переменной)
    private static final String staticString;

    //переменная экземпляра, относится к экземпляру, т.е. объекту
    private int nonStaticInt;
    private long nonStaticLong;

    //статический блок нужен для инициализации переменных, относящихся к классу (статических переменных)
    static {
        staticString = "a";
    }

    //логический блок, внутри него можно писать код, который выполнится перед тем, как вызовется конструктор
    {
        nonStaticInt = 50;
    }

    //конструктор по умолчанию. Если его не написать, то все равно он есть,
    // исключение - если у вас есть конструктор с параметрами,
    // тогда конструктор по умолчанию отсутствует, его нужно написать
    public A() {
        nonStaticLong = 20L;
    }

    //конструктор с параметром.
    public A(int nonStaticInt) {
        //this() - это вызов конструктора по умолчанию.
        // Т.е. отработает сначала инициализация с помощью дефаултного конструктора, потом все остальное что в этом блоке
        this();
        //this - это обращение к самому объекту, который мы создаем с помощью конструктора
        //таким образом мы инициализируем переменную, относящуюся к объекту.
        this.nonStaticInt = nonStaticInt;
    }
}
